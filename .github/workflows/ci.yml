# This file is inspired by the blogpost at https://kodimensional.dev/github-actions
# The purpose of this workflow is to build the ampersand generator in all 3 major platforms,
# and to run the regression testcases on them. 

name: CI

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
  push:
    branches: # empty list to only trigger on branches (i.e. not tags, ..)

jobs:
  cabal:
    name: cabal ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.2"]
        ghc:
          - "8.6.5"
          - "8.8.4"
          - "8.10.4"
        exclude:
          - os: macOS-latest
            ghc: 8.8.4
          - os: macOS-latest
            ghc: 8.6.5
          - os: windows-latest
            ghc: 8.6.5

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - uses: actions/setup-haskell@v1.1.4
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v2.1.3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Install dependencies
      run: |
        cabal build all --only-dependencies

    - name: Build
      run: |
        cabal build all

    - name: Test
      run: |
        cabal test all

  stack:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        plan:
        # - { build: stack, resolver: "--resolver lts-9"  }    # ghc-8.0.2
        # - { build: stack, resolver: "--resolver lts-11"  }   # ghc-8.2.2
        # - { build: stack, resolver: "--resolver lts-12"  }   # ghc-8.4.4
        # - { build: stack, resolver: "--resolver lts-13"  }  redundant because lts-14 checks ghc-8.6 already
        - { build: stack, resolver: "--resolver lts-17.9"  }   # ghc-8.10.3

    name: ${{ matrix.plan.build }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
#      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - uses: actions/setup-haskell@v1.1.4
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v2.1.3
      name: Cache ~/.stack
      with:
        path: | 
          ~/.ghc
          ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Install dependencies
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --only-dependencies

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      if: ${{ runner.os != 'windows' }}
      run: |
        stack test --system-ghc