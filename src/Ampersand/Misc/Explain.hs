module Ampersand.Misc.Explain
    ( string2Blocks
    , blocks2String
    , PandocFormat(..)
    )
where

import Text.Pandoc
import Ampersand.Core.ParseTree      (PandocFormat(..))
import Ampersand.Basics

-- | use a suitable format to read generated strings. if you have just normal text, ReST is fine.
-- | defaultPandocReader getOpts should be used on user-defined strings.
string2Blocks :: PandocFormat -> String -> [Block]
string2Blocks defaultformat str
 = case theParser (removeCRs str) of
    Left err ->  fatal 18 $ "Proper error handling of Pandoc is still TODO."
                        ++"\n  This particular error is cause by some "++show defaultformat++" in your script:"
                        ++"\n"++show err
    Right (Pandoc _ blocks) -> blocks
   where
     theParser =
           case defaultformat of
           Markdown  -> readMarkdown def
           ReST      -> readRST      def
           HTML      -> readHtml     def
           LaTeX     -> readLaTeX    def
 -- case blocks of             -- WHY (SJ, dec 7th, 2011): What is the point of changing Para into Plain?
 --    [Para is] -> [Plain is]   -- BECAUSE (SJ, dec 7th, 2011): The table of relations in the LaTeX output of ChapterDataAnalysis gives errors when LaTeX is run, because Para generates a newline that LaTeX cannot cope with.
 --    _         -> blocks       --                              However, this Para is generated by Pandoc, so I'm wondering whether the mistake is in Pandoc? Anyway, this solution is a dirty fix, which I don't like.

     removeCRs :: String -> String
     removeCRs [] = []
     removeCRs ('\r' :'\n' : xs) = '\n' : removeCRs xs
     removeCRs (c:xs) = c:removeCRs xs

makePrefix :: PandocFormat -> String
makePrefix format = ":"++show format++":"

-- | write [Block] as String in a certain format using defaultWriterOptions
blocks2String :: PandocFormat -> Bool -> [Block] -> String
blocks2String format writeprefix ec
 = [c | c<-makePrefix format,writeprefix]
   ++ writer def (Pandoc nullMeta ec)
   where writer = case format of
            Markdown  -> writeMarkdown
            ReST      -> writeRST
            HTML      -> writeHtmlString
            LaTeX     -> writeLaTeX
