CONTEXT FormalAmpersand IN ENGLISH
INCLUDE "Concepts.adl"
--INCLUDE "Tables.xlsx"

PATTERN Plugs -- This pattern documents the semantics of plugs as of november 2014.
RELATION maintains[Plug*Rule]
RELATION in[Concept*Plug] --TODO: 'Nearly TOT: All concepts are in a plug, except ONE".
RELATION relsInPlug[Plug*Relation] --FIXME [SUR] -- Note: Declared relations only. This excludes I and V relations!

-- Rules
--ROLE Ampersand MAINTAINS AllIsasInOnePlug
RULE AllIsasInOnePlug LABEL "All isas in one plug" : (-(genspc[Isa*Concept]~;gengen[Isa*Concept];in[Concept*Plug]) \/ in[Concept*Plug]) /\ (-(gengen[Isa*Concept]~;genspc[Isa*Concept];in[Concept*Plug]) \/ in[Concept*Plug])
MEANING "If a concept is stored in a plug, then every generalization of that concept is stored in the same plug."
ENDPATTERN

PATTERN Persistence
RELATION rec[Field*Record] [UNI,TOT] -- the record in which a field resides
RELATION att[Field*SqlAttribute] [UNI,TOT] -- the attribute in which a field resides
RELATION val[Field*Atom] [UNI] -- the record in which a field resides
RELATION in[Record*SQLPlug] [UNI,TOT] -- the record in which a field resides
RELATION table[SqlAttribute*SQLPlug] [UNI,TOT] -- the attribute in which a field resides
RELATION srcAtt[Relation*SqlAttribute] [UNI] -- should be TOT as well...
RELATION tgtAtt[Relation*SqlAttribute] [UNI] -- should be TOT as well...
RELATION lAtom[Pair*Atom] [UNI] -- should be TOT as well...
RELATION rAtom[Pair*Atom] [UNI] -- should be TOT as well...

-- the following are duplicated from Atoms.adl
RELATION in[Pair*Relation] [UNI] -- should be TOT as well...
RELATION fst[SRFP*Field] [UNI] -- should be TOT as well...
RELATION snd[SRFP*Field] [UNI] -- should be TOT as well...

RULE sameTable : srcAtt;table = tgtAtt;table
RULE sameRecord : fst;rec = snd;rec
RULE inRelation : in = (lAtom;val~;fst~/\rAtom;val~;snd~) ; (fst;att;srcAtt~/\snd;att;tgtAtt~)
RULE identifyField : rec;rec~/\att;att~ |- I[Field]
MEANING "Each field is identified uniquely by the combination of a record and an attribute."
RULE inTable : in = rec~;att;table
ENDPATTERN

PATTERN KernelTables LABEL "Kernel Tables"
RELATION concept[SqlAttribute*Concept] [UNI,TOT] -- concept in a column of a (wide) table

RELATION conceptAttribute[Concept*SqlAttribute] -- alleen 'ONE' overtreedt de TOTaliteit hier, maar ONE gaat er toch uit.
RULE TOTconceptAttributeNew LABEL "TOT conceptAttribute (new)" : I[Concept] |- conceptAttribute;conceptAttribute~
VIOLATION ( TXT "{EX} NewStruct;SqlAttribute"
          , TXT ";conceptAttribute;Concept;", SRC I, TXT ";SqlAttribute;_NEW"
          , TXT ";concept;SqlAttribute;_NEW;Concept;", SRC I
          )
RULE TOTconceptAttributeDel LABEL "TOT conceptAttribute (del)" : conceptAttribute;conceptAttribute~ |- I[Concept]
VIOLATION ( TXT "{EX} DelPair;concept;SqlAttribute;", SRC conceptAttribute, TXT ";Concept;", SRC I  -- HJO20160604: @Stef, hoe weet je zeker dat die vooraf bestaat??
          , TXT "{EX} DelPair;conceptAttribute;Concept;", SRC I, TXT ";SqlAttribute;", SRC conceptAttribute
          , TXT "{EX} DelAtom;SqlAttribute;", SRC I
          )
ROLE ExecEngine MAINTAINS TOTconceptAttributeNew, TOTconceptAttributeDel

CLASSIFY TblSQL ISA SQLPlug
CLASSIFY BinSQL ISA SQLPlug
CLASSIFY SQLPlug ISA Plug

RELATION rootConcept[TblSQL*Concept] [UNI]

RULE NewTblSQL LABEL "New TblSQL" : I[Concept]-isa~;isa |- rootConcept[TblSQL*Concept]~;rootConcept[TblSQL*Concept]
MEANING "Each largest concept is the root concept of a TblSQL."
VIOLATION ( TXT "{EX} NewStruct;TblSQL"
          , TXT ";rootConcept[TblSQL*Concept];TblSQL;_NEW;Concept;", SRC I
          )
RULE DelTblSQL LABEL "Del TblSQL" : rootConcept[TblSQL*Concept]~;rootConcept[TblSQL*Concept] |- I[Concept]-isa~;isa
MEANING "Each TblSQL has at most one largest concept as root."
VIOLATION ( TXT "{EX} DelPair;rootConcept[TblSQL*Concept];TblSQL;", SRC rootConcept[TblSQL*Concept]~, TXT ";Concept;", SRC I
          , TXT "{EX} DelAtom;TblSQL;", SRC rootConcept[TblSQL*Concept]~
          )
ROLE ExecEngine MAINTAINS NewTblSQL, DelTblSQL

RELATION table[SqlAttribute*SQLPlug] [UNI]

RULE AssignAttributesToTables LABEL "Assign attributes to tables" : rootConcept[TblSQL*Concept];isaStar~;conceptAttribute |- table~
MEANING "The concept attributes of all specializations of a root concept are in the same table."
VIOLATION ( TXT "{EX} InsPair;table;SqlAttribute;", TGT I, TXT ";SQLPlug;", SRC I[SQLPlug] )
ROLE ExecEngine MAINTAINS AssignAttributesToTables

RELATION key[TblSQL*SqlAttribute] [UNI,TOT]
MEANING "Each SQLPlug has one field designated to contain atom keys."

RULE InsertKeyTblSQL LABEL "Insert key of a TblSQL" : rootConcept[TblSQL*Concept];conceptAttribute |- key
MEANING "The conceptattribute of the root concept of a TblSQL is the key of that TblSQL."
VIOLATION ( TXT "{EX} InsPair;key;TblSQL;", SRC I, TXT ";SqlAttribute;", TGT I )
ROLE ExecEngine MAINTAINS InsertKeyTblSQL
RULE DeleteKeyTblSQL LABEL "Delete key from a TblSQL" : key |- rootConcept[TblSQL*Concept];conceptAttribute
MEANING "The key of a TblSQL is the conceptattribute of the root concept of that TblSQL."
VIOLATION ( TXT "{EX} DelPair;key;TblSQL;", SRC I, TXT ";SqlAttribute;", TGT I )
ROLE ExecEngine MAINTAINS DeleteKeyTblSQL
ENDPATTERN



PATTERN AttributesUnivalentRelations LABEL "Attributes for univalent relations"

RULE fillSrcAttUnivalent LABEL "fill srcAtt for univalent relations" : (I/\prop;"UNI";prop~);source;conceptAttribute |- srcAtt
MEANING "The concept-table of the source of a univalent relation is the source attribute of that relation."
VIOLATION ( TXT "{EX} InsPair;srcAtt;Relation;", SRC I, TXT ";SqlAttribute;", TGT I )
RULE fillTgtAttUnivalent LABEL "fill tgtAtt for univalent relations" : (I/\prop;"UNI";prop~);srcAtt;table |- tgtAtt;table
MEANING "The target attribute of a univalent relation is created in the same table as the source attribute."
VIOLATION ( TXT "{EX} NewStruct;SqlAttribute"
          , TXT ";tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;_NEW"
          , TXT ";concept;SqlAttribute;_NEW;Concept;", SRC target
          , TXT ";table;SqlAttribute;_NEW;SQLPlug;", TGT I
          )
RULE cleanSrcAttUnivalent LABEL "clean srcAtt for univalent relations" : (I/\prop;"UNI";prop~);srcAtt |- source;conceptAttribute
MEANING "The source attribute of a univalent relation is the concept-table of its source concept."
VIOLATION ( TXT "{EX} DelPair;srcAtt;Relation;", SRC I, TXT ";SqlAttribute;", TGT I )
RULE cleanTgtAttUnivalent LABEL "clean tgtAtt for univalent relations" : (I/\prop;"UNI";prop~);tgtAtt;table |- srcAtt;table
MEANING "The target attribute of a univalent relation is removed from the table in which its source attribute resides."
VIOLATION ( TXT "{EX} DelAtom;SQLPlug;", TGT I
          , TXT "{EX} DelPair;table;SqlAttribute;", SRC tgtAtt, TXT ";SQLPlug;", TGT I
          , TXT "{EX} DelPair;concept;SqlAttribute;", SRC tgtAtt, TXT ";Concept;", SRC target
          , TXT "{EX} DelAtom;SqlAttribute;", SRC tgtAtt
          , TXT "{EX} DelPair;tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;", SRC tgtAtt
          )
ROLE ExecEngine MAINTAINS fillSrcAttUnivalent, cleanSrcAttUnivalent, cleanTgtAttUnivalent, fillTgtAttUnivalent
ENDPATTERN



PATTERN AttributesInjectiveRelations LABEL "Attributes for injective relations"
RULE fillTgtAttInjective LABEL "fill tgtAtt for injective relations" : ((I/\prop;"INJ";prop~)-prop;"UNI";prop~);target;conceptAttribute |- tgtAtt
MEANING "The concept-table of the target of a univalent relation is the target attribute of that relation."
VIOLATION ( TXT "{EX} InsPair;tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;", TGT I )
RULE fillSrcAttInjective LABEL "fill srcAtt for injective relations" : ((I/\prop;"INJ";prop~)-prop;"UNI";prop~);tgtAtt;table |- srcAtt;table
MEANING "The target attribute of a univalent relation is created in the same table as the source attribute."
VIOLATION ( TXT "{EX} NewStruct;SqlAttribute"
          , TXT ";srcAtt;Relation;", SRC I, TXT ";SqlAttribute;_NEW"
          , TXT ";concept;SqlAttribute;_NEW;Concept;", SRC source
          , TXT ";table;SqlAttribute;_NEW;SQLPlug;", TGT I
          )
RULE cleanTgtAttInjective LABEL "clean tgtAtt for injective relations" : ((I/\prop;"INJ";prop~)-prop;"UNI";prop~);tgtAtt |- target;conceptAttribute
MEANING "The target attribute of a univalent relation is the concept-table of its target concept."
VIOLATION ( TXT "{EX} DelPair;tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;", TGT I )
RULE cleanSrcAttInjective LABEL "clean srcAtt for injective relations" : ((I/\prop;"INJ";prop~)-prop;"UNI";prop~);srcAtt;table |- tgtAtt;table
MEANING "The target attribute of a univalent relation is removed from the table in which its source attribute resides."
VIOLATION ( TXT "{EX} DelAtom;SQLPlug;", TGT I
          , TXT "{EX} DelPair;table;SqlAttribute;", SRC srcAtt, TXT ";SQLPlug;", TGT I
          , TXT "{EX} DelPair;concept;SqlAttribute;", SRC srcAtt, TXT ";Concept;", SRC source
          , TXT "{EX} DelAtom;SqlAttribute;", SRC srcAtt
          , TXT "{EX} DelPair;srcAtt;Relation;", SRC I, TXT ";SqlAttribute;", SRC srcAtt
          )
ROLE ExecEngine MAINTAINS fillTgtAttInjective, cleanTgtAttInjective, cleanSrcAttInjective, fillSrcAttInjective
ENDPATTERN



PATTERN AttributesNtoMRelations LABEL "Attributes of n-to-m relations"
RULE fillTableNtoMrelationsSrc LABEL "fill table for n-to-m relations (source)" :
     ((I-prop;"INJ";prop~)-prop;"UNI";prop~);source |- srcAtt;concept
MEANING "The concept of the source attribute of an n-to-m relation is the source concept of that relation."
VIOLATION ( TXT "{EX} NewStruct;SqlAttribute"
          , TXT ";srcAtt;Relation;", SRC I, TXT ";SqlAttribute;_NEW"
          , TXT ";concept;SqlAttribute;_NEW;Concept;", TGT I
          )
RULE fillTableNtoMrelationsTgt LABEL "fill table for n-to-m relations (target)" :
      ((I-prop;"INJ";prop~)-prop;"UNI";prop~);target |- tgtAtt;concept
MEANING "The concept of the target attribute of an n-to-m relation is the source concept of that relation."
VIOLATION ( TXT "{EX} NewStruct;SqlAttribute"
          , TXT ";tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;_NEW"
          , TXT ";concept;SqlAttribute;_NEW;Concept;", TGT I
          )
RULE newBinSQL LABEL "new BinSQL" :
     srcAtt~;((I[Relation]-prop;"INJ";prop~)-prop;"UNI";prop~);tgtAtt |- table;I[BinSQL];table~
MEANING "Every relation has an SQLPlug in which to store its population."
VIOLATION ( TXT "{EX} NewStruct;BinSQL"
          , TXT ";table;SqlAttribute;", SRC I, TXT ";BinSQL;_NEW"
          , TXT ";table;SqlAttribute;", TGT I, TXT ";BinSQL;_NEW"
          )
ROLE ExecEngine MAINTAINS fillTableNtoMrelationsSrc, fillTableNtoMrelationsTgt,newBinSQL

RULE clearTableNtoMrelationsSrc LABEL "clear table for n-to-m relations (source)" :
     ((I-prop;"INJ";prop~)-prop;"UNI";prop~);srcAtt;concept |- source
MEANING "The source concept of an n-to-m relation is the concept of the source attribute of that relation."
VIOLATION ( TXT "{EX} DelPair;concept;SqlAttribute;", SRC srcAtt, TXT ";Concept;", SRC srcAtt;concept
          , TXT "{EX} DelPair;table;SqlAttribute;", SRC srcAtt, TXT ";SQLPlug;", SRC srcAtt;table
          , TXT "{EX} DelAtom;SqlAttribute;", SRC srcAtt
          , TXT "{EX} DelPair;srcAtt;Relation;", SRC I, TXT ";SqlAttribute;", SRC srcAtt
          )
RULE clearTableNtoMrelationsTgt LABEL "clear table for n-to-m relations (target)" :
      ((I-prop;"INJ";prop~)-prop;"UNI";prop~);tgtAtt;concept |- target
MEANING "The target concept of an n-to-m relation is the concept of the target attribute of that relation."
VIOLATION ( TXT "{EX} DelPair;concept;SqlAttribute;", SRC tgtAtt, TXT ";Concept;", SRC tgtAtt;concept
          , TXT "{EX} DelPair;table;SqlAttribute;", SRC tgtAtt, TXT ";SQLPlug;", SRC tgtAtt;table
          , TXT "{EX} DelAtom;SqlAttribute;", SRC tgtAtt
          , TXT "{EX} DelPair;tgtAtt;Relation;", SRC I, TXT ";SqlAttribute;", SRC tgtAtt
          )
RULE removeBinSQL LABEL "remove BinSQL" : I[BinSQL] |- table~;table
MEANING "Every BinSQL has two attributes."
VIOLATION ( TXT "{EX} DelAtom;BinSQL;", SRC I )
ROLE ExecEngine MAINTAINS clearTableNtoMrelationsSrc, clearTableNtoMrelationsTgt, removeBinSQL
ENDPATTERN



PATTERN ValidationTabular LABEL "Validation of the tabular structure"

RELATION ttype[Concept*TType] [UNI,TOT]
MEANING "Each Concept has a technical type."
RELATION reprType[TblSQL*TType] [UNI]  -- should be ,TOT
MEANING "Each wide table has precisely one technical type."

RULE conceptAttribute~;isa;conceptAttribute |- table;table~
MEANING ""

--RULE conceptAttribute |- concept~
--MEANING ""

RULE srcAtt;concept |- source
MEANING ""

RULE tgtAtt;concept |- target
MEANING ""

--RULE TblSQLtechnicalTypeIns LABEL "Every TblSQL has a technical type (Ins reprType)" : table~;conceptAttribute~;ttype |- reprType
--MEANING "Every TblSQL has a technical type."
--VIOLATION ( TXT "{EX} InsPair;reprType;TblSQL;", SRC I[TblSQL], TXT ";TType;", TGT I )
--ROLE ExecEngine MAINTAINS TblSQLtechnicalTypeIns
--RULE TblSQLtechnicalTypeDel LABEL "Every TblSQL has a technical type (Del reprType)" : reprType |- table~;conceptAttribute~;ttype
--MEANING "Every TblSQL has a technical type."
--VIOLATION ( TXT "{EX} DelPair;reprType;TblSQL;", SRC I[TblSQL], TXT ";TType;", TGT I )
--ROLE ExecEngine MAINTAINS TblSQLtechnicalTypeDel

ENDPATTERN

ENDCONTEXT