CONTEXT RAP IN ENGLISH
--! It is allowed to change texts and/or the order of texts IF AND ONLY IF this is also done in the corresponding Haskell files !--
INCLUDE "AST.ifc"
--INCLUDE "MinimalAST.xlsx" -- Contains minimal population. Anything discarded from it must break an invariant
INCLUDE "Contexts.adl"
INCLUDE "Relations.adl"
INCLUDE "Documentation.adl"
INCLUDE "Rules.adl"
INCLUDE "Expressions.adl"
INCLUDE "Views.adl"
-- INCLUDE "Generics.adl"
INCLUDE "Tables.adl"

{-RJ/20150207: Opmerkingen n.a.v. een vluchtige code-inspectie van dit bestand
1) Het is nu nog wel, maar binnen RAP niet meer, mogelijk om een Pattern, Context en/of Concept dezelfde naam te geven (vanwege de INJectiviteit van relaties als name, ptnm). Deze nieuwe beperking lijkt me onwenselijk.
      Reactie HJO/20150207: Die snap ik niet. Twee Concepten met dezelfde naam zijn hetzelfde Concept. Een Pattern mag dezelfde naam hebben als een Concept. Daarmee zijn de uiteraard niet identiek. Een Pattern is nou een maal geen Concept. Dit is nu zo geregeld in RAP. Als je punt is, dat twee verschillende Concepten best dezelfde naam zouden mogen hebben, dan hebben we een issue. Maar ik denk niet dat je dit bedoelt.
2) VIEWs (zoals 'VIEW Gen') horen m.i. niet in dit bestand thuis, maar daar waar de UI wordt gespecificeerd. IDENTs horen wel in dit bestand thuis.
      Reactie HJO/20150207: Helemaal mee eens. Gaan we doen. 
3) Van "RELATION propertyRule[Relation*PropertyRule]" zou ik denken dat hij niet alleen INJ, maar ook SUR moet zijn.
      Reactie HJO/20150207: Dat denk ik ook. Leuk is, dat dit geen invloed heeft op de meatgrinder. Immers, die zorgt alleen maar voor de juiste populatie van Relations. Als blijkt dat we dan overtredingen krijgen, dan gaan we dat meemaken...
-}

REPRESENT Purpose TYPE BIGALPHANUMERIC
REPRESENT Meaning TYPE BIGALPHANUMERIC
REPRESENT ConceptDefinition TYPE BIGALPHANUMERIC

PROCESS Plugs -- This pattern documents the semantics of plugs as of november 2014.
RELATION maintains[Plug*Rule]
RELATION in[Concept*Plug] --TODO: 'Nearly TOT: All concepts are in a plug, except ONE".
RELATION relsInPlug[Plug*Relation] --FIXME [SUR] -- Note: Declared relations only. This excludes I and V relations!

-- Rules
--ROLE Ampersand MAINTAINS "All isas in one plug"
RULE "All isas in one plug" : (-(genspc[Gen*Concept]~;gengen[Gen*Concept];in[Concept*Plug]) \/ in[Concept*Plug]) /\ (-(gengen[Gen*Concept]~;genspc[Gen*Concept];in[Concept*Plug]) \/ in[Concept*Plug])
MEANING "If a concept is stored in a plug, then every generalization of that concept is stored in the same plug."
ENDPROCESS

PATTERN ToDo -- This pattern contains stuff still to be done.
RELATION rrviols[Rule*Violation]
ENDPATTERN
ENDCONTEXT


