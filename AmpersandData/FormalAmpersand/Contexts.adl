CONTEXT RAP IN ENGLISH
INCLUDE "Rules.adl"
INCLUDE "Relations.adl"
INCLUDE "Patterns.adl"


VIEW FormalAmpersand.Signature: FormalAmpersand.Signature( TXT "[" , FormalAmpersand.src;FormalAmpersand.name[FormalAmpersand.Concept*FormalAmpersand.ConceptName] , TXT "*" , FormalAmpersand.tgt;FormalAmpersand.name[FormalAmpersand.Concept*FormalAmpersand.ConceptName] , TXT "]" )


--PATTERN Authorizations
--PURPOSE PATTERN Authorizations
--{+
--+}
--PURPOSE RELATION owner[Context*Account]
--{+In RAP, every context must have one owner, who can exercise all ownership rights that contexts have.
--Initially, the creator of a context is its owner.
--+}
--    RELATION owner[Context*Account] [UNI]
--    MEANING "A context has an owner, which is an account."
--    ROLE ExecEngine MAINTAINS TOTowner
--    RULE TOTowner : (I[Context]#"_SESSION"[SESSION]);ingelogd |- owner
--    MEANING "The creator of a context is the account that was logged in when the context was created."
--    VIOLATION ( TXT "{EX} InsPair;owner;Context;", SRC I, TXT ";Account;", TGT I )
--ENDPATTERN

PATTERN FormalAmpersand.Context
    CONCEPT FormalAmpersand.Context "A context is the root of the abstract syntax tree of a valid Ampersand rule specification." 
    REPRESENT FormalAmpersand.ContextName TYPE ALPHANUMERIC
    RELATION FormalAmpersand.name[FormalAmpersand.Context*FormalAmpersand.ContextName] [UNI] --Removed TOT, for it gives a nasty violation
    MEANING "The name of a context."
      ROLE ExecEngine MAINTAINS FormalAmpersand.DelUnusedContextName
      RULE FormalAmpersand.DelUnusedContextName LABEL "del unused ContextName" : I[FormalAmpersand.ContextName] |- FormalAmpersand.name~;FormalAmpersand.name
      MEANING "A ContextName without Context will be removed."
      VIOLATION ( TXT "{EX} DelAtom;FormalAmpersand.ContextName;", SRC I )

    IDENT FormalAmpersand.Pattern: FormalAmpersand.Pattern(FormalAmpersand.name[FormalAmpersand.Pattern*FormalAmpersand.PatternName],FormalAmpersand.context[FormalAmpersand.Pattern*FormalAmpersand.Context])

    RELATION FormalAmpersand.name[FormalAmpersand.Concept*FormalAmpersand.ConceptName] [UNI,TOT] 
    MEANING "Every relation has a name by which it can be referenced within its Context(s)."
    REPRESENT FormalAmpersand.ConceptName TYPE ALPHANUMERIC
    RELATION FormalAmpersand.context[FormalAmpersand.Isa*FormalAmpersand.Context] [UNI,TOT]
    RELATION FormalAmpersand.context[FormalAmpersand.IsE*FormalAmpersand.Context] [UNI,TOT]
    MEANING "The user-defined generalization rules in a context."
    RELATION FormalAmpersand.concepts[FormalAmpersand.Pattern*FormalAmpersand.Concept]
    RELATION FormalAmpersand.uses[FormalAmpersand.Context*FormalAmpersand.Pattern]
    MEANING "If a context uses a pattern, everything declared in that pattern is valid within the context."
    RELATION FormalAmpersand.context[FormalAmpersand.Concept*FormalAmpersand.Context] [UNI] -- This contains all concepts declared inside a context.
    MEANING "If a concept declaration is used in a context, that concept exists in that context. This is registered in the system."
    RELATION FormalAmpersand.ctxds[FormalAmpersand.Relation*FormalAmpersand.Context] [UNI] -- comes from ctxds, which is defined in A_Context. This contains all relations declared inside a context but outside the patterns it contains.
    MEANING "Any relation declared anywhere in a context outside the scope of a pattern is registered in the system."
    RELATION FormalAmpersand.relsDefdIn[FormalAmpersand.Relation*FormalAmpersand.Context] [UNI] -- comes from relsDefdIn, which is defined in FSpec. This contains all relations declared inside a context including the patterns it contains.
    MEANING "Any relation declared anywhere in a context is registered in the system."
    RELATION FormalAmpersand.ctxrs[FormalAmpersand.Rule*FormalAmpersand.Context] [UNI]  -- This contains all rules declared inside a context but outside the patterns it contains.
    MEANING "If a rule is declared in a context outside any pattern, that rule exists in that context. This is registered in the system."
    RELATION FormalAmpersand.udefrules[FormalAmpersand.Rule*FormalAmpersand.Context] [UNI]      -- ^ all rules the user has declared within this context including the patterns it contains,
                                                --   which are not property- and not identity rules. See ViewPoint.hs
    RELATION FormalAmpersand.proprules[FormalAmpersand.Rule*FormalAmpersand.Context] [UNI]      -- ^ all property rules the user has declared within this context including the patterns it contains.
    RELATION FormalAmpersand.identityRules[FormalAmpersand.Rule*FormalAmpersand.Context] [UNI]  -- ^ all identity rules the user has declared within this context. This contains all rules declared inside a context including the patterns it contains.
    -- Use allRules[Rule*Context] to get all rules declared inside a context, including all rules declared inside the patterns in that context. A rule can be either user defined, a property rule, or identity rule
  
    MEANING "If a rule is declared anywhere in a context, that rule exists in that context. This is registered in the system."
    RELATION FormalAmpersand.context[FormalAmpersand.Pattern*FormalAmpersand.Context] [UNI]     -- comes from patterns, which is defined in FSpec. This contains all patterns declared inside a context.
    MEANING "If a pattern is declared inside a context, this is registered in the system."

    PURPOSE RULE FormalAmpersand.RuleDeclaredOutsidePattern
    {+Ampersand allows its users to declare rules in a context, outside the scope of a pattern.
    +}
    ROLE ExecEngine MAINTAINS FormalAmpersand.RuleDeclaredOutsidePattern
    RULE FormalAmpersand.RuleDeclaredOutsidePattern LABEL "rule declared outside pattern" : FormalAmpersand.ctxrs[FormalAmpersand.Rule*FormalAmpersand.Context] |- FormalAmpersand.udefrules[FormalAmpersand.Rule*FormalAmpersand.Context]
    MEANING "A rule declared in a context outside the scope of a pattern is registered in the system."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.udefrules;FormalAmpersand.Rule;", SRC I, TXT ";FormalAmpersand.Context;", TGT I)

    PURPOSE RULE RelationDeclaredOutsidePattern
    {+Ampersand allows its users to declare relations in a context, outside the scope of a pattern.
    +}
    ROLE ExecEngine MAINTAINS FormalAmpersand.RelationDeclaredOutsidePattern
    RULE FormalAmpersand.RelationDeclaredOutsidePattern LABEL "relation declared outside pattern" : FormalAmpersand.ctxds[FormalAmpersand.Relation*FormalAmpersand.Context] |- FormalAmpersand.relsDefdIn[FormalAmpersand.Relation*FormalAmpersand.Context]
    MEANING "A relation declared in a context outside the scope of a pattern is registered in the system."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.relsDefdIn;FormalAmpersand.Relation;", SRC I, TXT ";FormalAmpersand.Context;", TGT I)

    PURPOSE RULE FormalAmpersand.PatternIsUsed
    {+Patterns can be defined inside a context. This means that all declarations in that pattern are used in that context.
    +}
    ROLE ExecEngine MAINTAINS PatternIsUsed
    RULE FormalAmpersand.PatternIsUsed LABEL "pat defined in means used in" : FormalAmpersand.context[FormalAmpersand.Pattern*FormalAmpersand.Context] |- FormalAmpersand.uses[FormalAmpersand.Context*FormalAmpersand.Pattern]~
    MEANING "Every pattern defined in a context is used in that context."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.uses;FormalAmpersand.Context;", TGT I, TXT ";FormalAmpersand.Pattern;", SRC I)
ENDPATTERN

PURPOSE PATTERN FormalAmpersand.Validity
{+The mechanism to define truth within context is represented by the relation `valid`.
The idea is that a context determines concepts, relations and rules, all of which we say are `valid` in the context.
For this purpose we define three relations, `valid[Concept*Context]`, `valid[Relation*Context]`, and `valid[Rule*Context]`.
+}
PATTERN FormalAmpersand.Validity
    RELATION FormalAmpersand.valid[FormalAmpersand.Concept*FormalAmpersand.Context]
    MEANING "A concept/context pair in the relation `valid[Concept*Context]` means that this concept exists with the context."
    PURPOSE RULE FormalAmpersand.validRelations MARKDOWN
    {+In order to compute validity of concepts within a context,
    three categories of concepts are taken into account:
     - the concept defined in the context
     - all concept defined in patterns within the context
     - all concept defined in patterns used by the context
    +}
    ROLE ExecEngine MAINTAINS FormalAmpersand.validConcepts
    RULE FormalAmpersand.validConcepts : FormalAmpersand.concepts~;(FormalAmpersand.context\/FormalAmpersand.uses~) \/ FormalAmpersand.context |- FormalAmpersand.valid[FormalAmpersand.Concept*FormalAmpersand.Context]
    MEANING "Every concept defined in one of the patterns inside a context, or in the context itself, or in one of the contexts used by this context, is valid throughout that context."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.valid;FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Context;", TGT I)
    RULE FormalAmpersand.AllValidConcepts : FormalAmpersand.valid[FormalAmpersand.Concept*FormalAmpersand.Context] |- FormalAmpersand.concepts~;(FormalAmpersand.context\/FormalAmpersand.uses~) \/ FormalAmpersand.context[FormalAmpersand.Concept*FormalAmpersand.Context]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "FormalAmpersand.Concept ", SRC FormalAmpersand.name, TXT " is not valid in context ", TGT I)

    ROLE ExecEngine MAINTAINS FormalAmpersand.ValidityConcepts
    RULE FormalAmpersand.ValidityConcepts LABEL "validity of concepts in a context" : FormalAmpersand.uses;FormalAmpersand.declaredIn~;I[FormalAmpersand.Relation];FormalAmpersand.sign;(FormalAmpersand.tgt\/FormalAmpersand.src) |- FormalAmpersand.context[FormalAmpersand.Concept*FormalAmpersand.Context]~
    MEANING "Every concept in the signature of relations is valid in every context that uses the pattern in which that relation is declared.."
    VIOLATION ( TXT "{EX} InsPair;FormalAmpersand.context;FormalAmpersand.Concept;", TGT I, TXT ";FormalAmpersand.Context;", SRC I )

    RELATION FormalAmpersand.valid[FormalAmpersand.Relation*FormalAmpersand.Context]    -- TODO: this relation is called 'relsDefdIn' in FormalAmpersand.
    MEANING "A relation/context pair in the relation `valid[Relation*Context]` means that this relation exists with the context."
    ROLE ExecEngine MAINTAINS FormalAmpersand.validRelations
    RULE FormalAmpersand.validRelations : FormalAmpersand.declaredIn;(FormalAmpersand.context\/FormalAmpersand.uses~) \/ FormalAmpersand.ctxds |- FormalAmpersand.valid[FormalAmpersand.Relation*FormalAmpersand.Context]
    MEANING "Every relation defined in one of the patterns inside a context, or in the context itself, or in one of the contexts used by this context, is valid throughout that context."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.valid;FormalAmpersand.Relation;", SRC I, TXT ";FormalAmpersand.Context;", TGT I)

    RELATION FormalAmpersand.valid[FormalAmpersand.Rule*FormalAmpersand.Context]
    MEANING "A rule/context pair in the relation `valid[Rule*Context]` means that this rule exists with the context."
    ROLE ExecEngine MAINTAINS FormalAmpersand.validRules
    RULE FormalAmpersand.validRules : FormalAmpersand.patRules[FormalAmpersand.Pattern*FormalAmpersand.Rule]~;(FormalAmpersand.context\/FormalAmpersand.uses~) \/ FormalAmpersand.context[FormalAmpersand.Rule*FormalAmpersand.Context] |- FormalAmpersand.valid[FormalAmpersand.Rule*FormalAmpersand.Context]
    MEANING "Every rule defined in one of the patterns inside a context, or in the context itself, or in one of the contexts used by this context, is valid throughout that context."
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.valid;FormalAmpersand.Rule;", SRC I, TXT ";FormalAmpersand.Context;", TGT I)
    ROLE FormalAmpersand.User MAINTAINS FormalAmpersand.AllValidRules
    RULE FormalAmpersand.AllValidRules : FormalAmpersand.valid[FormalAmpersand.Rule*FormalAmpersand.Context] |- FormalAmpersand.patRules[FormalAmpersand.Pattern*FormalAmpersand.Rule]~;(FormalAmpersand.context\/FormalAmpersand.uses~) \/ FormalAmpersand.context[FormalAmpersand.Rule*FormalAmpersand.Context]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "Rule ", SRC FormalAmpersand.name, TXT " is not valid in context ", TGT I)
ENDPATTERN

ENDCONTEXT


