CONTEXT FormalAmpersand IN ENGLISH LATEX
INCLUDE "Rules.adl"

PURPOSE PATTERN FormalAmpersand.Rules
{+The rules that govern rules are brought together in one pattern,
in order to formalize rules and determine their meaning.
+}

CONCEPT FormalAmpersand.Rule "A rule is a statement that must be true in each context in which it is valid."
PURPOSE CONCEPT FormalAmpersand.Rule
{+
Rules are used as a concrete reason for people to act, feel or believe.
In philosophy, this is called a 'norm'.
-- SJ 2017-07-21: The claims made above require an embedding in the literature.
\subsubsection*{Explanation}
A rule differs from a statement in that it must always be true.
Example:
\begin{itemize}
\item   The statement "St. Paul street is a one way street." might be either true or false.
        We just have to check the road signs on St. Paul street to know.
        If, however, the city council decides that St. Paul street is a one way street, we have a rule.
        It is a rule because St. Paul street must be a one way street.
        As long as the appropriate road signs are absent, the situation on the street contradicts the decision of the city council.
\end{itemize}
The word 'must' implies that there is someone who says so.
In this example, the city council, by the authority invested upon it by the law, says that St. Paul street must be a one way street.
The people who are affected by this are called stakeholders.
All contexts in which this rule is valid are called the scope of this rule.
Outside its scope, a rule has no meaning.
For example a rule may be valid in downtown St. Catharines, Ontario, but totally meaningless in Smalltown, NY that does not even have a St. Paul street.
+}

PURPOSE RELATION FormalAmpersand.ctxrs[FormalAmpersand.Rule*FormalAmpersand.Context]  -- Haskell: ctxrs :: Context->[Rule]
{+ A relation is needed to register all user defined rules in a context, that are defined outside patterns and outside processes. +}
PURPOSE RELATION FormalAmpersand.nameFormalAmpersand.Rule*FormalAmpersand.RuleName]  -- Haskell: rrnm :: Rule->String
{+ The name of a rule is registered in a relation, so users can change the name of a rule without changing the rule proper. +}
PURPOSE RELATION FormalAmpersand.urlEncodedName[FormalAmpersand.Rule*FormalAmpersand.EncodedName]
{+ This is used to show a graphic +}
PURPOSE RELATION FormalAmpersand.origin[FormalAmpersand.Rule*FormalAmpersand.Origin]  -- Haskell: rrfps :: Rule->Origin
{+ The location on which a rule is defined is registered for tracing purposes. +}
PURPOSE RELATION FormalAmpersand.message[FormalAmpersand.Rule*FormalAmpersand.Message]  -- Haskell:  rrmsg :: Rule->[Markup]
{+ User-specified violation messages are being registered to generate code for error messages.
There may be multiple messages to support multiple languages
+}
PURPOSE RELATION FormalAmpersand.sign[FormalAmpersand.Rule*FormalAmpersand.Signature]  -- Haskell: rrtyp ::    Signature
{+  +}
PURPOSE RELATION FormalAmpersand.formalTerm[FormalAmpersand.Rule*FormalAmpersand.Term]
{+ The term to be kept true must be registered, because it formalizes the semantics of this rule.
The consequences this rule has for the information system are derived from this term.
 +}

ENDCONTEXT