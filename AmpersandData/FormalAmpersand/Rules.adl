CONTEXT FormalAmpersand IN ENGLISH LATEX
-- The documentation of this script can be found in Rules.docadl
-- This file has been aligned with ShowMeatgrinder on 2017-07-21 by SJ.

PATTERN Rules
    CONCEPT Rule "A rule is a statement that must be true in each context in which it is valid."
    CONCEPT RuleName ""
    CLASSIFY RuleName ISA Name
    IDENT Rules: Rule(context[Rule*Context],name[Rule*RuleName])

    RELATION ctxrs[Rule*Context]  -- This contains all rules declared inside a context but outside the patterns it contains.
    RELATION context[Rule*Context] [UNI]  -- This contains all rules declared inside a context

    MEANING "If a rule is declared in a context outside any pattern, that rule exists in that context. This is registered in the system."
    CLASSIFY RuleName ISA Name
    RELATION name[Rule*RuleName] [UNI] -- e.g. 'ASY bfOUprop::BusinessFunction*BusinessFunction'
    MEANING "The name of a rule."
      ROLE ExecEngine MAINTAINS "del unused RuleName"
      RULE "del unused RuleName" : I[RuleName] |- name~;name
      MEANING "A RuleName without Rule will be removed."
      VIOLATION ( TXT "{EX} DelAtom;RuleName;", SRC I )
    REPRESENT EncodedName TYPE ALPHANUMERIC
    RELATION urlEncodedName[Rule*EncodedName] [UNI]
    RELATION urlEncodedName[Pattern*EncodedName] [UNI]
    RELATION urlEncodedName[Concept*EncodedName] [UNI]
    RELATION origin[Rule*Origin] [UNI]
    MEANING "The location where a rule is defined."  -- e.g. 'line 367:10, file "C:\\\\Ampersand\\\\Workspace\\\\NRM\\\\NRM-BasicProcesses.adl"'
    RELATION message[Rule*Markup] -- e.g. 'bfOUprop[BusinessFunction] is not antisymmetric'
--    RELATION srcConcept[Rule*Concept][UNI,TOT] -- e.g. 'BusinessFunction'
--    RELATION tgtConcept[Rule*Concept][UNI,TOT] -- e.g. 'BusinessFunction'
    RELATION formalTerm[Rule*Term] [UNI]
    MEANING "The rule expressed in relation algebra."
    RELATION meaning[Rule*Meaning] -- e.g. 'BusinessFunction' 
  --  RELATION sign[Rule*Signature] [UNI,TOT]
    RELATION declaredthrough[PropertyRule*Property] [TOT]
    MEANING "A property is defined as part of the declaration of relation."
    RELATION propertyRule[Relation*PropertyRule] [SUR]
    MEANING "The properties of a relation."

    CONCEPT Conjunct "A conjunct is an term that represents an invariant in an information system."
    CONCEPT Quad "A quad is a Haskell data structure that corresponds to one rule in an Ampersand script."
    CONCEPT PairView "A pairview is the definition of an error message for violations or a rule."
    CONCEPT PairViewSegment "A pairviewsegment is a fragment of a pairview"
ENDPATTERN

PATTERN PropertyRules
    CONCEPT PropertyRule "A property rule is a rule, that is a property of a user-declared relation"
    CLASSIFY PropertyRule ISA Rule
    CONCEPT Property "UNI<|>TOT<|>INJ<|>SUR<|>RFX<|>IRF<|>SYM<|>ASY<|>TRN<|>PROP"
    RULE "property enum": I[Property] |- "UNI" \/ "TOT" \/ "INJ" \/ "SUR" \/ "RFX" \/ "IRF" \/ "SYM" \/ "ASY" \/ "TRN" \/ "PROP"
    MEANING "There are nine tokens, that can be used to define properties on a relation. -> is syntactic sugar for UNI and TOT; UNI means univalent; TOT means total; INJ means injective; SUR means surjective; RFX means reflexive; IRF means irreflexive; SYM means symmetric; ASY means antisymmetric; TRN means transitive; and PROP means symmetric and antisymmetric."
    REPRESENT Property TYPE ALPHANUMERIC
ENDPATTERN

ENDCONTEXT