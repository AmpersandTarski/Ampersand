CONTEXT RAP IN ENGLISH

PATTERN "Reusing Definitions"
    CLASSIFY Definition ISA Entity
    CLASSIFY ExternalEntity ISA Entity
    RELATION name[Pattern*PatternName] [UNI,TOT]
    MEANING "Every pattern has one given name."
    RELATION inPattern[Instantiation*Pattern] [UNI,TOT]
    MEANING "The pattern in which an INSTANCE statement is placed."
    RELATION uses[Instantiation*Pattern] [UNI,TOT]
    MEANING "The pattern that is being instantiated."
    RELATION instantiates[Pattern*Pattern]
    MEANING "Pattern A instantiates B means that all definitions from B are copied into A."
    RELATION including[Instantiation*Definition]
    MEANING "The definitions of entities that are being instantiated."
    RELATION excluding[Instantiation*Definition]
    MEANING "The definitions of entities that are hidden (but still instantiated)."
    RELATION existsIn[Entity*Pattern] [UNI,TOT]
    MEANING "The pattern in which an entity exists."
    RELATION locator[Definition*Locator] [UNI]
    MEANING "The locator of a definition tells where it can be found."
    RELATION definition[Entity*Definition] [UNI,TOT]
    MEANING "The thing a name refers to is registered in the relation definition."
    RELATION type[Entity*SyntacticCategory] [UNI,TOT]
    MEANING "The syntactic category of every entity is registered in the relation `type`."
    RELATION name[Entity*String] [UNI]
    MEANING "The string that identifies the entity locally or externally."
    RELATION inPattern[Definition*Pattern] [UNI,TOT]  -- total because the definition lives only as long as the pattern it is declared in.
    MEANING "The pattern in which the definition is made."
    RELATION instantiatesAs[Instantiation*String] [UNI,TOT]
    MEANING "The string used to refer to this instance of the pattern."
    RELATION fromInstance[ExternalEntity*Instantiation] [UNI,TOT]
    MEANING "The instance from which this entity is obtained."
    RELATION fromEntity[ExternalEntity*Entity] [UNI,TOT]
    MEANING "The non-local entity from which this entity is obtained."
    RELATION exposes[Instantiation*ExternalEntity] [SUR]
    IDENT ExternalEntity : ExternalEntity (exposes~,fromEntity)

    RULE referenceFirstPart : fromInstance = name[Entity*String];result~;fst;instantiatesAs~
    MEANING "The first part of the string combination determines the pattern instance of the entity."

    RULE referenceSecondPart :
         definition /\ V[ExternalEntity*Definition]
           = exposes~;including /\
             name[Entity*String];result~;snd;name[Entity*String]~ -- second part of the string names the declaration
    MEANING "The second part of the string combination is the name of an entity that is included by the INSTANCE statement."

    RULE exposes = fromInstance~ /\ inPattern;existsIn~
    MEANING "The entities are exposed in the inPattern pattern"


    IDENT Entity : Entity (name, type)

    RULE I[Definition] \/ I[ExternalEntity] = I[Entity]
    MEANING "Each entity is local or external"
    RULE I[Definition] - I[ExternalEntity] = I[Definition]
    MEANING "Each local entity is never external"
    RULE I[ExternalEntity] - I[Definition] = I[ExternalEntity]
    MEANING "Each external entity is never local"

    RULE definition /\ V[Definition*Definition] = I /\ existsIn;inPattern~
    
    RULE excluding \/ including = uses;inPattern~
    MEANING "The excluded and the included definitions together are precisely the declarations of the consumed pattern"
    
    RULE excluding /\ including = -V
    MEANING "There is no overlap between what is included and excluded"

    RULE inPattern~;uses = instantiates
    MEANING "The relation `instantiates` is defined here."

    RULE existsIn /\ V[Definition*Pattern] = inPattern
    MEANING "A definition exists in the pattern in which it is declared"

    RULE uses;existsIn~ |- exposes;fromEntity
    MEANING {+ If a pattern in which entity e exists is consumed in some instance,
               then that instance exposes an entity based on e +}

ENDPATTERN

PATTERN StringCombination
  CONCEPT CombineStrings "A combination of two strings"
  CONCEPT String "A sequence"
  RELATION fst[CombineStrings*String] [UNI,TOT]
  RELATION snd[CombineStrings*String] [UNI,TOT]
  RELATION result[CombineStrings*String] [UNI,TOT] -- de TOT door de exec-engine laten doen..
  IDENT CombineStrings : CombineStrings (fst,snd)
ENDPATTERN

ENDCONTEXT


