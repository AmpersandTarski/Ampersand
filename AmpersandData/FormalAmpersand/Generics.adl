CONTEXT FormalAmpersand IN ENGLISH LATEX
PURPOSE CONTEXT Generics
{+This context specifies the administration that currently is, and in future will have been, the contents of GENERICS.PHP+}

REPRESENT FormalAmpersand.MySQLQuery TYPE BIGALPHANUMERIC


RELATION FormalAmpersand.versionInfo[FormalAmpersand.Context*FormalAmpersand.AmpersandVersion] [UNI,TOT]  -- e.g. 'Ampersand v3.0.3[master:029ea02], build time: 05-Feb-15 08:46:36 W. Europe Standard Time'
REPRESENT FormalAmpersand.AmpersandVersion TYPE ALPHANUMERIC

-- HJO20150206 @Rieks: Willen we hier nog iets met signalTableName, isDev, autoRefreshInterval?

--! To be done !--
--RELATION allSpecializations[CONTEXT*...] = // transitive, so including specializations of specializations
--  array
--    ();

--[Rules]--
--Definitions for Rules are found in Rules.adl and documented in Rules.docadl.

--[PairViews]--
RELATION FormalAmpersand.rrviol[FormalAmpersand.Rule*FormalAmpersand.PairView] -- e.g. 
RELATION FormalAmpersand.segment[FormalAmpersand.PairView*FormalAmpersand.PairViewSegment] [SUR,INJ]
RELATION FormalAmpersand.sequenceNr[FormalAmpersand.PairViewSegment*FormalAmpersand.SequenceNumber] [UNI,TOT]
REPRESENT SequenceNumber TYPE INTEGER
-- Unneccessary: RELATION segmentType[PairViewSegment*PairViewSegmentType]  [UNI,TOT]  -- 'Text' or 'Exp'
RELATION FormalAmpersand.text[FormalAmpersand.PairViewSegment*FormalAmpersand.String] [UNI] -- IFF segmentType == 'Text'
RELATION FormalAmpersand.srcOrTgt[FormalAmpersand.PairViewSegment*FormalAmpersand.SourceOrTarget] [UNI] -- 'Src' or 'Tgt'. -- IFF SegmentType == 'Exp'
-- Unneccessary: RELATION expTgt[PairViewSegment*Concept] [UNI] -- IFF SegmentType == 'Exp'
-- Unneccessary for the Atlas: RELATION expSQL[PairViewSegment*MySQLQuery] [UNI] -- IFF SegmentType == 'Exp'
RELATION FormalAmpersand.pvsExp[FormalAmpersand.PairViewSegment*FormalAmpersand.Term] [UNI]

RELATION showADL[PairView*ShowADL] [UNI,TOT] -- Temporary relation to enable first attempt to make the atlas editable. 

--[Conjuncts]--
RELATION FormalAmpersand.allConjuncts[FormalAmpersand.Context*FormalAmpersand.Conjunct] [INJ]
RELATION FormalAmpersand.rcConjunct[FormalAmpersand.Conjunct*FormalAmpersand.Term] [TOT]
ROLE ExecEngine MAINTAINS FormalAmpersand.conjunctTotal
RULE FormalAmpersand.conjunctTotal : I[FormalAmpersand.Conjunct] |- FormalAmpersand.rcConjunct;FormalAmpersand.rcConjunct~
-- VIOLATION ( TXT "The conjunct ", SRC showADL, TXT " should have been bound to a term.")
VIOLATION ( TXT "{EX} DelAtom;FormalAmpersand.Conjunct;", SRC I )

RELATION FormalAmpersand.originatesFrom[FormalAmpersand.Conjunct*FormalAmpersand.Rule] -- rule where the conjunct originates from.
ROLE ExecEngine MAINTAINS FormalAmpersand.originatesFromTotal
RULE FormalAmpersand.originatesFromTotal : I[FormalAmpersand.Conjunct] |- FormalAmpersand.originatesFrom;FormalAmpersand.originatesFrom~
-- VIOLATION ( TXT "The conjunct ", SRC showADL, TXT " should have been bound to a rule.")
VIOLATION ( TXT "{EX} DelAtom;FormalAmpersand.Conjunct;", SRC I )

--[Roles]--

-- VIEW Role : Role(name)
-- TODO: IDENT Role: Role(name[Role*RoleName], allRoles[Context*Role]~)
RELATION FormalAmpersand.allRoles[FormalAmpersand.Context*FormalAmpersand.Role] [INJ]
RELATION FormalAmpersand.name[FormalAmpersand.Role*FormalAmpersand.RoleName] [UNI]
CLASSIFY FormalAmpersand.RoleName ISA FormalAmpersand.Name
RELATION FormalAmpersand.maintains[FormalAmpersand.Role*FormalAmpersand.Rule] -- e.g. ("ExecEngine", "Activeren van rollen") (was "ruleNames")
RELATION FormalAmpersand.interfaces[FormalAmpersand.Role*FormalAmpersand.Interface]

--[Interfaces]--
RELATION FormalAmpersand.interfaces[FormalAmpersand.Context*FormalAmpersand.Interface][INJ]

ENDCONTEXT
