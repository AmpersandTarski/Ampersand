CONTEXT FormalAmpersand IN ENGLISH 

PATTERN FormalAmpersand.Concepts
    REPRESENT FormalAmpersand.Name TYPE ALPHANUMERIC
    
    CONCEPT FormalAmpersand.Concept "A concept is a set of similar atoms."
    CONCEPT FormalAmpersand.ConceptDef "A conceptdef defines a concept."
    RELATION FormalAmpersand.concept[FormalAmpersand.ConceptDef*FormalAmpersand.Concept] [UNI,TOT]
    RELATION FormalAmpersand.name[FormalAmpersand.Concept*FormalAmpersand.ConceptName] [UNI,SUR]

    ROLE ExecEngine MAINTAINS FormalAmpersand.delUnusedConceptName
    RULE FormalAmpersand.delUnusedConceptName LABEL "del unused ConceptName" : I[FormalAmpersand.ConceptName] |- FormalAmpersand.name~;FormalAmpersand.name
    MEANING "A ConceptName without Concept will be removed."
    VIOLATION ( TXT "{EX} DelAtom;FormalAmpersand.ConceptName;", SRC I )
    
    -- RULE delUnusedMeaning : I[Meaning] |- cddef2~;cddef2
    -- MEANING "A Meaning without ConceptDef will be removed."  TODO: Fix this, because meanings can be connected to other stuff as well.
    -- VIOLATION ( TXT "{EX} DelAtom;ConceptDefinition;", SRC I )
    
    -- REPRESENT FormalAmpersand.ConceptDef TYPE BIGALPHANUMERIC
    -- RELATION FormalAmpersand.acdcpt[FormalAmpersand.Concept*FormalAmpersand.ConceptDef][UNI]
    -- RULE FormalAmpersand.delUnusedConceptDef : I[FormalAmpersand.ConceptDef] |- FormalAmpersand.acdcpt~;FormalAmpersand.acdcpt
    -- MEANING "A ConceptDef without Concept will be removed."
    -- VIOLATION ( TXT "{EX} DelAtom;FormalAmpersand.ConceptDef;", SRC I )

    RELATION FormalAmpersand.name[FormalAmpersand.Relation*FormalAmpersand.RelationName] [UNI,TOT]
    RELATION FormalAmpersand.ttype[FormalAmpersand.Concept*FormalAmpersand.TType][UNI]
    RULE FormalAmpersand.enumerationOfTType : I[FormalAmpersand.TType] = 
      "ALPHANUMERIC" \/ "BIGALPHANUMERIC" \/ "HUGEALPHANUMERIC" \/ "PASSWORD" \/ "BINARY" \/ "BIGBINARY" \/ "HUGEBINARY" \/ "DATE" \/ "DATETIME" \/ "BOOLEAN" \/ "INTEGER" \/ "FLOAT" \/ "OBJECT"
    POPULATION FormalAmpersand.TType CONTAINS [
      "ALPHANUMERIC",   "BIGALPHANUMERIC",   "HUGEALPHANUMERIC",   "PASSWORD",   "BINARY",   "BIGBINARY",   "HUGEBINARY",   "DATE",   "DATETIME",   "BOOLEAN",   "INTEGER",   "FLOAT",   "OBJECT" ]

    IDENT FormalAmpersand.Concept : FormalAmpersand.Concept(FormalAmpersand.name,FormalAmpersand.context[FormalAmpersand.Concept*FormalAmpersand.Context])
    RELATION FormalAmpersand.meaning[FormalAmpersand.ConceptDef*FormalAmpersand.Meaning][UNI]
    -- RULE delUnusedMeaning : I[Meaning] |- cddef2~;cddef2
    -- MEANING "A Meaning without ConceptDef will be removed."  TODO: Fix this, because meanings can be connected to other stuff as well.
    -- VIOLATION ( TXT "{EX} DelAtom;ConceptDefinition;", SRC I )

    RELATION FormalAmpersand.name[FormalAmpersand.Relation*FormalAmpersand.RelationName] [UNI,TOT]
    MEANING "Every relation has a name by which it can be referenced within its Context(s)."
    RELATION FormalAmpersand.source[FormalAmpersand.Relation*FormalAmpersand.Concept] [UNI,TOT]
    RELATION FormalAmpersand.target[FormalAmpersand.Relation*FormalAmpersand.Concept] [UNI,TOT]

    CLASSIFY FormalAmpersand.ConceptName, FormalAmpersand.RelationName ISA FormalAmpersand.Name
    RELATION FormalAmpersand.context[FormalAmpersand.Concept*FormalAmpersand.Context] [UNI] -- comes from concs, which is defined in FSpec. This contains all concepts declared inside a context but outside the patterns it contains.

--    RULE IdentifiabilityConcepts LABEL "Identifiability of concepts" : name[Concept*ConceptName];name[Concept*ConceptName]~ |- I[Concept]
    CONCEPT FormalAmpersand.Isa ""
    CONCEPT FormalAmpersand.IsE ""
    RELATION FormalAmpersand.gengen[FormalAmpersand.Isa*FormalAmpersand.Concept] [UNI,TOT]
    MEANING "A generalization rule refers to one or more generic concepts."
    RELATION FormalAmpersand.genspc[FormalAmpersand.Isa*FormalAmpersand.Concept] [UNI,TOT]
    MEANING "A generalization rule refers to one or more specific concepts."
    RELATION FormalAmpersand.gengen[FormalAmpersand.IsE*FormalAmpersand.Concept] [TOT]
    MEANING "A generalization rule refers to one or more generic concepts."
    RELATION FormalAmpersand.genspc[FormalAmpersand.IsE*FormalAmpersand.Concept] [UNI,TOT]
    MEANING "A generalization rule refers to one or more specific concepts."
ENDPATTERN

PATTERN FormalAmpersand.ComputeClosures LABEL "Compute Closures"
    RELATION FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept] [ASY]
    MEANING "s isa g  means that each element of concept  s  is defined to be an element of concept  g  as well."
    RELATION FormalAmpersand.isaStar[FormalAmpersand.Concept*FormalAmpersand.Concept] -- Transitive, reflexive closure of isa, aka isa*
    MEANING "s isaStar g  means that  s  is  g  or  each element of concept s  is an element of concept  g  as well."
    RELATION FormalAmpersand.isaPlus[FormalAmpersand.Concept*FormalAmpersand.Concept] -- Transitive closure of isa, aka isa+
    MEANING "s isaPlus g  means that each element of concept  s  is an element of concept  g  as well."

    RELATION FormalAmpersand.isaCopy[FormalAmpersand.Concept*FormalAmpersand.Concept] -- necessary only for calling the Transitive closure function.
    ROLE ExecEngine MAINTAINS FormalAmpersand.ComputeTransitiveClosureISA
    RULE FormalAmpersand.ComputeTransitiveClosureISA LABEL "Compute transitive closure of isa" : FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept] = FormalAmpersand.isaCopy[FormalAmpersand.Concept*FormalAmpersand.Concept]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} TransitiveClosure;FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;FormalAmpersand.isaCopy[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.isaPlus")

    ROLE ExecEngine MAINTAINS FormalAmpersand.ComputeTransitiveClosureISAbyIns, FormalAmpersand.ComputeTransitiveClosureISAbyDel
    RULE FormalAmpersand.ComputeTransitiveClosureISAbyIns LABEL "Compute transitive closure of isa by Ins" : FormalAmpersand.isaPlus\/I |- FormalAmpersand.isaStar
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.isaStar;FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)
    RULE FormalAmpersand.ComputeTransitiveClosureISAbyDel LABEL "Compute transitive closure of isa by Del" : FormalAmpersand.isaStar |- FormalAmpersand.isaPlus\/I
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} DelPair;FormalAmpersand.isaStar;FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)
ENDPATTERN

PATTERN FormalAmpersand.ReflexiveISAclosures LABEL "Reflexive isa closures"
    RELATION FormalAmpersand.isaRfxStar[FormalAmpersand.Concept*FormalAmpersand.Concept] -- Transitive, reflexive closure of isa[Concept*Concept]\/isa[Concept*Concept]~
    MEANING "s isaRfxStar g  means that  s  is  g  or  each element of concept s  is an element of concept  g  or vice-versa."
    RELATION FormalAmpersand.isaRfxPlus[FormalAmpersand.Concept*FormalAmpersand.Concept] -- Transitive closure of isa[Concept*Concept]\/isa[Concept*Concept]~
    MEANING "s isaRfxPlus g  means that each element of concept  s  is an element of concept  g  or vice-versa."

    RELATION FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept] -- isaRfx[Concept*Concept]=isa[Concept*Concept]\/isa[Concept*Concept]~
    ROLE ExecEngine MAINTAINS FormalAmpersand.ComputeIsaRfxIns, FormalAmpersand.ComputeIsaRfxDel
    RULE FormalAmpersand.ComputeIsaRfxIns LABEL "Compute isaRfxIns" : FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept]\/FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept]~ |- FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)
    RULE FormalAmpersand.ComputeIsaRfxDel LABEL "Compute isaRfxDel" : FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept] |- FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept]\/FormalAmpersand.isa[FormalAmpersand.Concept*FormalAmpersand.Concept]~
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} DelPair;FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)

    RELATION FormalAmpersand.isaRfxCopy[FormalAmpersand.Concept*FormalAmpersand.Concept] -- necessary only for calling the Transitive closure function.
    ROLE ExecEngine MAINTAINS FormalAmpersand.ComputeTransitiveClosureISAconcept
    RULE FormalAmpersand.ComputeTransitiveClosureISAconcept LABEL "Compute transitive closure of isa[Concept*Concept]\\/isa[Concept*Concept]~" : FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept] = FormalAmpersand.isaRfxCopy[FormalAmpersand.Concept*FormalAmpersand.Concept]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} TransitiveClosure;FormalAmpersand.isaRfx[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;FormalAmpersand.isaRfxCopy[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.isaRfxPlus[FormalAmpersand.Concept*FormalAmpersand.Concept]")

    ROLE ExecEngine MAINTAINS FormalAmpersand.ComputeIsaRfxStarIns, FormalAmpersand.ComputeIsaRfxStarDel
    RULE FormalAmpersand.ComputeIsaRfxStarIns LABEL "Compute isaRfxStar by Ins" : FormalAmpersand.isaRfxPlus[FormalAmpersand.Concept*FormalAmpersand.Concept]\/I |- FormalAmpersand.isaRfxStar[FormalAmpersand.Concept*FormalAmpersand.Concept]
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} InsPair;FormalAmpersand.isaRfxStar[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)
    RULE FormalAmpersand.ComputeIsaRfxStarDel LABEL "Compute isaRfxStar by Del" : FormalAmpersand.isaRfxStar[FormalAmpersand.Concept*FormalAmpersand.Concept] |- FormalAmpersand.isaRfxPlus[FormalAmpersand.Concept*FormalAmpersand.Concept]\/I
    MEANING "TODO: MEANING ONTBREEKT"
    VIOLATION (TXT "{EX} DelPair;FormalAmpersand.isaRfxStar[FormalAmpersand.Concept*FormalAmpersand.Concept];FormalAmpersand.Concept;", SRC I, TXT ";FormalAmpersand.Concept;", TGT I)
ENDPATTERN

ENDCONTEXT