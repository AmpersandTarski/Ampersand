CONTEXT "AST Interface" IN ENGLISH

INTERFACE Ampersand FOR Ampersand : '_SESSION';V[SESSION*Context]
BOX <SHCOLS>
    [ "Context" : I
    , "name" : name[Context*ContextIdentifier]
    ]
INTERFACE "Context" FOR Ampersand : I[Context] BOX
    [ --"name"  : name[Context*ContextIdentifier]
      "owner" : owner[Context*Account]
    , "valid~" : valid[Rule*Context]~
    , "usedPatterns" : usedPatterns[Context*Pattern]
    , "patterns" : patterns[Context*Pattern]
    , "gens" : gens[Context*Gen]
    , "concs" : concs[Context*Concept]
    , "relations" : relations[Context*Relation]
    , "context~" : context[Relation*Context]~
    ]

INTERFACE "Concept" FOR Ampersand : I[Concept] BOX
    [ concept : I
    , name    : name
    , ttype   : ttype
    , "source~" : source~
    , "target~" : target~
    , "gengen~" : gengen~
    , "genspc~" : genspc~
    , "rootConcept~" : rootConcept~
    , "src of expression~" : src[Expression*Concept]~
    , "tgt of expression~" : tgt[Expression*Concept]~
    , "src of sign~" : src[Signature*Concept]~
    , "tgt of sign~" : tgt[Signature*Concept]~
    , "concept~" : concept~
    , "conceptAttribute" : conceptAttribute
    , "in" : in[Concept*Plug]
    ]
{-
TABS[ Context : V[SESSION*Context]
    COLS ["name" : name[Context*ContextIdentifier]
         , patterns : usedPatterns
         ]
    , "Patterns" : V[SESSION*Pattern]
    COLS [ Pattern : name[Pattern*PatternIdentifier]
         , Purpose : purpose
         , Rules : rules
         , Relations : declarations
         ]
    , "Specializations" : V[SESSION*Gen]
    COLS [ Generic  : gengen
         , Specific : genspc
         ]
    , "Concepts" : V[SESSION*PlainConcept]
    COLS [ Id: I
       --  , Definition : cptdf
       --  , Purpose : cptpurpose
       --  , "Technical Type" : cpttp
         ]
    , "Relations" : V[SESSION*Relation]
    COLS [ name : name
         , signature : sign
         , properties : decprps;declaredthrough
         , pragmaL  : decprL
         , pragmaM  : decprM
         , pragmaR  : decprR
         , Meaning  : decmean
         , population : in~
         ]
    , "Rules" : V[SESSION*Rule]
    COLS [ name : name
         , signature : sign
         , Expression : rrexp[Rule*Expression]
         , Meaning : rrmean
         , Purpose : rrpurpose
         , Property : declaredthrough
         ]
--    , "All plugs" : V[ONE*Context];
    ]
-}

INTERFACE Expression FOR Ampersand : I[Expression]
BOX [ expression: I[Expression]
    , first : first 
    , operator : operator
    , second : second
    , lhs : lhs
    , rhs : rhs
    , arg : arg
    , "src" : src
    , "tgt" : tgt
    , "rrexp~" : rrexp[Rule*Expression]
    , bind  : bind
    , term  : term
    ]
INTERFACE Signature FOR Ampersand : I[Signature]
BOX [ Signature: I[Signature]
    , src : src
    , tgt : tgt
    , "sign~ (Relation)" : sign[Relation*Signature]~
    , "sign~ (Rule)" : sign[Rule*Signature]~
    ] 
INTERFACE Atoms FOR Ampersand : I[SESSION];'_SESSION'
TABS[ Atoms : V[SESSION*Atom]
    COLS [ "Atom" : I
         ]
    , Pairs  : V[SESSION*Pair]
    COLS [ "Pair" : I
         , l : l
         , r : r
         , in : in
         ]
    , Relations : V[SESSION*Relation]
    COLS [ "Relation" : I 
         , source : source
         , target : target
         ]
    , Concepts : V[SESSION*Concept]
    COLS [ "Concept" : I 
         , name : name -- [Concept*Identifier]
         ]
    ]
    


INTERFACE Pattern FOR Ampersand : I[Pattern]
BOX [ Pattern : name[Pattern*PatternIdentifier]
    ]


INTERFACE Gen FOR Ampersand : I[Gen]
BOX [ gengen : gengen
    , genspc : genspc
    ]

INTERFACE Relation FOR Ampersand : I[Relation]
BOX [ name    : name
    , "relations~" : relations~
    , sign    : sign
    , decprL  : decprL
    , decprM  : decprM
    , decprR  : decprR
    , "prop" : prop
    , decprps : decprps
    , context : context
    , meaning : decmean
    , source : source
    , target : target
    , srcAtt : srcAtt
    , tgtAtt : tgtAtt
    , purpose : decpurpose
    , population: in~
    , "declarations~" : declarations~
    , "relsInPlug~"  : relsInPlug~
    ]
ENDCONTEXT