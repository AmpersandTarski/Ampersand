CONTEXT Deliveries

SERVICE Customer : I[Client]
 = [ Order : from[Order*Client]~
      = [ Store: addressedTo
        , Items : item
        , bestelnummer: accepted~;accepted /\ I  -- alleen de geaccepteerde orders	
        ]
   , Delivery: deliveredTo~
      = [ order: of
        , store: of;addressedTo
        , delivered: of;addressedTo;provided /\ I
        , Items : item
        ]
   , invoice : sentTo~
      = [ invoiceNr: I[Invoice]
        , paid : paid~
        , Order: from
        , Store: from;addressedTo~
        ]

   ]

SERVICE Provider : I[Provider]
 = [ Order : addressedTo~
      = [ ordernumber: I[Order]
        , from : from
        , Items : item
        , accepted: accepted~;addressedTo~ /\ I
        ]
   , accepted : accepted
   , Delivery: provided
      = [ DeliveryNr: I[Delivery]
        , provider: provided~
        , order: of
        , client: deliveredTo
        , Items : item
        ]
   , Invoice : from~
      = [ invoiceNr: I[Invoice]
        , delivery : delivery
        , paid : paid~
        , klant : sentTo
        , Store: from;addressedTo~
        ]
   ]

SERVICE Bestellingen : I[Order]
 = [ van : from
   , aan : addressedTo
   , betaaldeOrders : from;paid;delivery;of;V[Order*ONE]
   ]

SERVICE Rekeningen : I[Invoice]
 = [ leverancier : from
   , leverantie : delivery
   , klant : sentTo
   , betaaldeOrders : paid~;paid
   ]

SERVICE Levering : I[Delivery]
 = [ leverancier : provided~
   , Order : of
   , klant : deliveredTo
   , betaald : deliveredTo;paid;delivery;V[Delivery*ONE]
   ]

SERVICE Orderitem : I[Product]
 = [ klant : item~;from
   , leverancier : item~;provided~
   ]


SERVICE Bestellijst : I[ONE]
 = [ LijstItem : V[ONE*Delivery]
      = [ leverancier : provided~	
        , klant : deliveredTo
        , betaald : deliveredTo;paid;delivery;V[Delivery*ONE]
   ]    ]

PATTERN Deliveries

 item :: Order * Product PRAGMA "" " mentions " " as an order item".

 item :: Delivery * Product PRAGMA "" " has " " as an order item"
  = [ ("Jelly beans #4921"  , "Jelly beans"  )
    ; ("Cookies #0382"      , "Cookies"      )
    ; ("Peanut butter #1993", "Peanut butter")
    ].

-- Er mag tijdelijk een order zijn zonder delivery. dus moet de surjectiviteit van 'of' worden gesignaleerd....

RULE deliver SIGNALS I |- of~;of EXPLANATION "De volgende order zit in de pijplijn"



 of :: Delivery -> Order PRAGMA "" " corresponds to "
  = [ ("Cookies #0382"      , "Order 22/09/2006 Cookies")
    ; ("Jelly beans #4921"  , "C45666"                  )
    ; ("Peanut butter #1993", "C45683"                  )
    ].
 item[Delivery*Product] |- of;item
  EXPLANATION "There must be an order for every item delivered."
 of;item |- item[Delivery*Product]
  EXPLANATION "All items ordered must be delivered."
 provided :: Provider * Delivery [SUR,INJ] PRAGMA "" " has delivered "
  = [ ("Candy’s candy", "Cookies #0382")
    ; ("Carter"       , "Jelly beans #4921")
    ; ("Carter"       , "Peanut butter #1993")
    ].

-- Er mag tijdelijk een order zijn die nog niet is geaccepteerd. dus moet de surjectiviteit van 'accepted' worden gesignaleerd....
SIGNAL accepteren ON I |- accepted~;accepted EXPLANATION "De volgende order(s) is/zijn nog niet geaccepteerd."

 accepted :: Provider * Order [INJ] PRAGMA "" " has accepted"
  = [ ("Candy’s candy", "Order 22/09/2006 Cookies")
    ; ("Carter"       , "C45666"                  )
    ; ("Carter"       , "C45683"                  )
    ].

-- \ref{rule 0}	Accepting an order is always done by the provider to whom the order was addressed.
 accepted |- addressedTo~ -- \ref{rule 0} % uit het artikel
 EXPLANATION "not allowed to accept this order"

-- \ref{rule 1}	Orders that are awaiting acceptance are signalled to the provider to whom the order was addressed.
SIGNAL order ON addressedTo~ |- accepted  -- \ref{rule 1} % uit het artikel
 EXPLANATION "orders received."

-- \ref{rule 2}
--	Deliveries are made by the provider who has accepted an order.
 accepted;of~ |- provided
  EXPLANATION "If a provider has accepted an order, then that provider is the one to make the delivery"

-- \ref{rule 3}
--	Ultimately, each order accepted must be delivered by the provider who has accepted that order.
--	The provider will be signalled of orders waiting to be delivered.
 SIGNAL deliver ON accepted |- provided;of
  EXPLANATION "deliverable orders"

 addressedTo :: Order -> Provider PRAGMA "" " was issued to "
  = [ ("Order 22/09/2006 Cookies", "Candy’s candy")
    ; ("C45666"                  , "Carter"       )
    ; ("C45683"                  , "Carter"       )
    ].

 deliveredTo :: Delivery -> Client PRAGMA "" " is delivered to "
  = [ ("Jelly beans #4921",	"Applegate")
    ; ("Cookies #0382",	"Brown")
    ; ("Peanut butter #1993",	"Conway")
    ].
 from :: Order -> Client PRAGMA "" " was ordered by "
  = [ ("C45666"                  , "Applegate")
    ; ("Order 22/09/2006 Cookies", "Brown"    )
    ; ("C45683"                  , "Conway"   )
    ].

-- \ref{rule 4}	Deliveries are made to the client who ordered the delivery
 of;from |- deliveredTo
  EXPLANATION "Deliveries are made to the client who ordered the delivery."

 sentTo :: Invoice -> Client PRAGMA "" " was sent to "
  = [ ("5362a", "Applegate")
    ; ("721i" , "Brown"    )
    ; ("9443a", "Conway"   )
    ].

-- Er mag tijdelijk een leverantie zijn zonder rekening. dus moet de surjectiviteit van 'delivery' worden gesignaleerd....
SIGNAL factureren ON I |- delivery~;delivery EXPLANATION "De volgende leverantie(s) is/zijn nog niet gefactureerd."

 delivery :: Invoice -> Delivery PRAGMA "" " covers "
  = [ ("5362a", "Jelly beans #4921")
    ; ("721i" , "Cookies #0382"    )
    ; ("9443a", "Peanut butter #1993"   )
    ].

-- \ref{rule 5}	A client accepts invoices for delivered orders only
 delivery~;sentTo |- deliveredTo
  EXPLANATION "A client accepts invoices for delivered orders only. (1.39)"

 from :: Invoice -> Provider PRAGMA "" " has been sent by "
  = [ ("721i" , "Candy’s candy")
    ; ("5362a", "Carter"       )
    ; ("9443a", "Carter"       )
    ].

 from = delivery;provided~
  EXPLANATION "There must be a delivery for every invoice sent."

SIGNAL pending ON provided = from~;delivery
 EXPLANATION "invoices to be sent (1.40)"

-- Er mag tijdelijk een onbetaalde rekening zijn, maar dat moet worden gesignaleerd.
-- Dus moet de surjectiviteit van 'paid' worden gesignaleerd....
SIGNAL teBetalen ON I |- paid~;paid EXPLANATION "De volgende leverantie(s) is/zijn nog niet gefactureerd."

 paid :: Client * Invoice [INJ] PRAGMA "" " has paid "
  = [ ("Applegate", "5362a")
    ; ("Brown", "721i")
    ; ("Conway", "9443a")
    ].
 paid |- sentTo~ EXPLANATION "Accept payments only for invoices sent"
 SIGNAL payable ON sentTo~ |- paid
 EXPLANATION "Invoices to be paid"
 sentTo = delivery;of;from
ENDPATTERN

 POPULATION item[Order*Product] CONTAINS
    [ ("C45666"                  , "Jelly beans"  )
    ; ("Order 22/09/2006 Cookies", "Cookies"      )
    ; ("C45683"                  , "Peanut butter")
    ]

ENDCONTEXT