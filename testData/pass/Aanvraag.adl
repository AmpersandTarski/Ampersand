CONTEXT Aanvraag

  SERVICE Persoon : I[Person]
   = [ "IDdocument" : authentic ALWAYS
        = [ IDdocument : I[IDdocument] ALWAYS UNI TOT PROP
          , gebied : authentic~;inhabitant ALWAYS UNI TOT
          ]
     , "Gebied" : inhabitant ALWAYS UNI TOT
     , "Aanvragen" : applicant~ ALWAYS
        = [ nr : I[Application] ALWAYS UNI TOT PROP
          , aanvrager : applicant ALWAYS UNI TOT
          , productsoort : kind[Application*Product] ALWAYS UNI TOT
          , gebied : applicant;inhabitant ALWAYS UNI TOT
          , behandelaar : applicant;inhabitant;area~ ALWAYS TOT
          ]
     ]

  SERVICE Personen : I[ONE]
   = [ Personen : V[ONE*Person] ALWAYS TOT
        = [ nr : I[Person] ALWAYS UNI TOT PROP
          , gebied : inhabitant ALWAYS UNI TOT
          ]
     ]

  SERVICE IDdocument : I[IDdocument]
   = [ "Authentieke persoon" : authentic~ ALWAYS UNI TOT
        = [ persoon : I[Person] ALWAYS UNI TOT PROP
          , bewoont : inhabitant ALWAYS UNI TOT
          ]
     , "Gevalideerde anvragen" : checked~ ALWAYS
        = [ nr : I[Application] ALWAYS UNI TOT PROP
          , aanvrager : applicant ALWAYS UNI TOT
          , productsoort : kind[Application*Product] ALWAYS UNI TOT
          , behandelaar : applicant;inhabitant;area~ ALWAYS TOT
          ]
     ]

  SERVICE IDdocumenten : I[ONE]
   = [ IDdocumenten : V[ONE*IDdocument] ALWAYS TOT
        = [ nr : I[IDdocument] ALWAYS UNI TOT PROP
          , persoon : authentic~ ALWAYS UNI TOT
          ]
     ]

 
  SERVICE Aanvraag : I[Application]
   = [ aanvrager : applicant ALWAYS UNI TOT
        = [ naam : I[Person] ALWAYS UNI TOT PROP
          , idDocument : authentic
          , bewoont : inhabitant ALWAYS UNI TOT
          ]
     , IDdocument : checked ALWAYS UNI
        = [ nr : I[IDdocument] ALWAYS UNI TOT PROP
          , persoon : authentic~ ALWAYS UNI TOT
          , woonachtig : authentic~;inhabitant ALWAYS UNI TOT
          , "geverifieerd door" : authentic~;inhabitant;area~ ALWAYS TOT
          ]
     , behandelaar : assigned ALWAYS UNI
     , productsoort : kind[Application*Product] ALWAYS UNI TOT
     , besluit : leadsto ALWAYS UNI
        = [ nr : I[Decision] ALWAYS UNI TOT PROP
          , behandelaar : leadsto~;applicant;inhabitant;area~ ALWAYS TOT
          ]
     ]

  SERVICE Aanvragen : I[ONE]
   = [ Aanvragen : V[ONE*Application] ALWAYS TOT
        = [ nr : I[Application] ALWAYS UNI TOT PROP
          , aanvrager : applicant ALWAYS UNI TOT
          , productsoort : kind[Application*Product] ALWAYS UNI TOT
          ]
     ]

  SERVICE Behandelaar : I[Employee]
   = [  Aanvragen : assigned~ 
        = [ nr         : I[Application] ALWAYS UNI TOT PROP
          , aanvrager  : applicant
          , "woont in" : applicant;inhabitant ALWAYS UNI TOT
          , idCheck    : checked
          , soort      : kind[Application*Product]
          , beslissing : leadsto]
     , "Productautorisatie" : auth ALWAYS
     , "Gebiedsautorisatie" : area ALWAYS
     ]

  SERVICE Product : I[Product]
   = [ Behandelaars : auth~ ALWAYS
     , "Aanvragen" : kind[Application*Product]~ ALWAYS
        = [ aanvraag     : I[Application] ALWAYS UNI TOT PROP
          , aanvrager    : applicant ALWAYS UNI TOT
          , productsoort : kind ALWAYS UNI TOT
          , "woont in"   : applicant;inhabitant ALWAYS UNI TOT
          , behandelaar  : applicant;inhabitant;area~ ALWAYS TOT
          ]
     , "Besluiten" : kind[Decision*Product]~ ALWAYS
        = [ besluit : I[Decision] ALWAYS UNI TOT PROP
          , productsoort : kind[Decision*Product] ALWAYS UNI TOT
          , aanvraag : leadsto~ ALWAYS UNI TOT
          , aanvrager : leadsto~;applicant ALWAYS UNI TOT
          , behandelaar : leadsto~;applicant;inhabitant;area~ ALWAYS TOT
          ]
     ]

  SERVICE Besluit : I[Decision]
   = [ productsoort : kind[Decision*Product] ALWAYS UNI TOT
     , "leadsto Application" : leadsto~ ALWAYS UNI TOT
        = [ aanvraag : I[Application] ALWAYS UNI TOT PROP
          , aanvrager : applicant ALWAYS UNI TOT
          , productsoort : kind[Application*Product] ALWAYS UNI TOT
          , "woongebied aanvrager" : applicant;inhabitant ALWAYS UNI TOT
          , behandelaar : applicant;inhabitant;area~ ALWAYS TOT
          ]
     ]

  SERVICE Besluiten : I[ONE]
   = [ Besluiten : V[ONE*Decision] ALWAYS TOT
        = [ nr : I[Decision] ALWAYS UNI TOT PROP
          , productsoort : kind[Decision*Product] ALWAYS UNI TOT
          , aanvraag : leadsto~ ALWAYS UNI TOT
          ]
     ]

  SERVICE Gebied : I[Area]
   = [ "Bewoners" : inhabitant~ ALWAYS
        = [ naam : I[Person] ALWAYS UNI TOT PROP
          , gebied : inhabitant ALWAYS UNI TOT
          , behandelaar : inhabitant;area~ ALWAYS TOT
          ]
     , "Behandelaars" : area~ ALWAYS TOT
     ]

  SERVICE Gebieden : I[ONE]
   = [ Gebieden : V[ONE*Area] ALWAYS TOT
        = [ naam : I[Area] ALWAYS UNI TOT PROP
          , behandelaar : area~ ALWAYS TOT
          ]
     ]

    
 
PATTERN Permits
 
 leadsto~;kind |- kind COMPUTING kind[Decision*Product]
  EXPLANATION "Every application leads to a decision. An application for a particular product (the type of permit) leads to a decision about that same product."
 
 assigned~;applicant;inhabitant |- area
  EXPLANATION "Employees get assigned to particular areas. This means that an assigned employee treats request from these areas only."
 
 applicant |- (checked;authentic~)
  EXPLANATION "An application for a permit is accepted only from individuals whose identity is authenticated."
 
 assigned |- kind;auth~
  EXPLANATION "Applications for permits are treated by authorized personnel only."
 

 authentic  :: Person * IDdocument    [INJ,SUR]     PRAGMA "Person " " has document " " as proof of identity, according to the legal authority"
  = [ ("Pietersen", "NL3133606015")
    ; ("Joosten", "377748C") -- hier staat een , net als bij [INJ,SUR,TOT] ipv een ;
    ; ("Mans", "NL3955040339") -- bij een OBJECT is een ; onmogelijk ivm verwarring met de 'join'
    ; ("Old' Bevelsborg", "M18294322")
    ; ("Lemmen", "M18263772")
    ].
 applicant  :: Application -> Person                PRAGMA "Application " " was made by "
  = [ ("Q87", "Pietersen")
    ; ("Q88", "Lemmen")
    ].
 checked    :: Application * IDdocument             PRAGMA "Application " " has been checked with IDdocument "
  = [ ("Q88", "M18263772")
    ; ("Q87", "NL3133606015")
    ].
 assigned   :: Application * Employee   [UNI]       PRAGMA "Application " " was treated by "
  = [ ("Q87", "Mans")
    ; ("Q88", "Old' Bevelsborg")
    ].
 auth       :: Employee * Product                   PRAGMA "Employee " " is authorized to treat product "
  = [ ("v.d.Knaap", "hunting permit")
    ; ("Mans", "hunting permit")
    ; ("v.d.Knaap", "building permit")
    ; ("Old' Bevelsborg", "building permit")
    ; ("Old' Bevelsborg", "work permit")
    ; ("Mans", "building permit")
    ].
 kind       :: Application -> Product               PRAGMA "" " is an application for a "
  = [ ("Q87", "hunting permit")
    ; ("Q88", "work permit")
    ].
 kind       :: Decision -> Product                  PRAGMA "Decision " " is about a "
  = [ ("D87-2005/04/29", "hunting permit")
    ; ("D88-2005/05/10", "work permit")
    ].
 inhabitant :: Person->Area                         PRAGMA "Person " " is inhabitant of area "
  = [ ("Pietersen", "Soho")
    ; ("Joosten", "City")
    ; ("Old' Bevelsborg", "City")
    ; ("Lemmen", "Soho")
    ; ("Mans", "West End")
    ].
 area       :: Employee * Area        [SUR]         PRAGMA "Employee " " treats applications from area "
  = [ ("v.d.Knaap", "West End")
    ; ("v.d.Knaap", "City")
    ; ("Old' Bevelsborg", "City")
    ; ("Old' Bevelsborg", "Soho")
    ; ("Mans", "Soho")
    ].
 leadsto    :: Application * Decision [INJ,UNI,SUR] PRAGMA "Application " " has lead to Decision "
  = [ ("Q87", "D87-2005/04/29")
    ; ("Q88", "D88-2005/05/10")
    ].

ENDPATTERN
ENDCONTEXT
