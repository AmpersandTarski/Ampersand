# For more information, see: https://github.com/commercialhaskell/stack/blob/release/doc/yaml_configuration.md

# Specifies the GHC version and set of packages available (e.g., lts-3.5, nightly-2015-09-21, ghc-7.10.2)
resolver: lts-19.5
# resolver: nightly-2018-11-24 # temporarily no LTS. Same as pandoc-crossref.
allow-newer: false
# Local packages, usually specified by relative directory name
packages:
  - "."

# Packages to be pulled from upstream that are not in the resolver (e.g., acme-missiles-0.3)
extra-deps:
  - pandoc-crossref-0.3.12.2@sha256:5670f34c8b5098346c6580553694e7fdedf6bc5446dcc2388f44d13783d02dab,7621
  - yaml-config-0.4.0@sha256:ed0c2f343d0ef32fe1941e42c0a3ec4e78befda79a65530ce161ef3374db9f40,1948
  - roman-numerals-0.5.1.5@sha256:819d04d9d442b24629dd058f6f0b02bd78e9f9ae99538bc44ca448f1cb2b7b01,1208
  - simple-sql-parser-0.4.4
  - SpreadsheetML-0.1@sha256:58aec77fb2d79779c6a1a4c2101526db0947dc558c064a46598cdde5745bfa74,1362
  #  - salve-1.0.11 # TODO Why was this required??

  #  # extra-deps for weeder, for it is built with the github actions (See ci2.yml):
  - weeder-2.3.0
  - algebraic-graphs-0.5@sha256:6eeec5ed1687ff7aa916e7bf9f02f51aaabde6f314dc0b7b1a84156974d7da73,8071

# Override default flag values for local packages and extra-deps
flags:
  pandoc:
    trypandoc: false
    embed_data_files: true
  #    static: false
  # pandoc-citeproc:
  #   bibutils: true
  #   embed_data_files: true
  #   unicode_collation: false
  #   test_citeproc: false
  #   debug: false
  mintty:
    Win32-2-13-1: false # see https://github.com/RyanGlScott/mintty/issues/4 for the reason to set this flag. TODO: This should probably be removed when upgrading to something higher than LTS-18.18

# Make sure we can already use GHC 7.10.3: (See https://www.fpcomplete.com/blog/2015/12/stack-with-ghc-7-10-3)
# compiler-check: newer-minor

# Extra package databases containing global packages
extra-package-dbs: []

build:
  haddock-deps: false

# Control whether we use the GHC we find on the path
# system-ghc: true

# Ampersand is large, and sometimes stack may crash out of memory.
# Reducing the number of parallel jobs lowers the memory use to acceptable levels.
# This resolved issue #1040 and is inspired on https://github.com/commercialhaskell/stack/issues/1910.
jobs: 4
# Require a specific version of stack, using version ranges
# require-stack-version: -any # Default
# require-stack-version: >= 0.1.10.0

# Override the architecture used by stack, especially useful on Windows
# arch: i386
# arch: x86_64

# Extra directories used by stack for building
# extra-include-dirs: [/path/to/dir]
# extra-lib-dirs: [/path/to/dir]
