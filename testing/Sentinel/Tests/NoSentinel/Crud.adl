CONTEXT Crud IN ENGLISH
-- Test file for CRUD matrix documentation

raa1 :: A * A1[TOT,INJ]
raa2 :: A * A2[TOT,INJ]
raa3 :: A * A3[TOT] -- A3 is a crud object, but raa3 is also part of crud object A because INJ is not required for the closure. TODO: is that what we want?
rab :: A * B[TOT,INJ]
ra5a :: A5 * A[SUR,UNI]

ra1a11 :: A1 * A11[TOT,INJ]
ra2a21 :: A2 * A21[TOT]
ra3a31 :: A3 * A31[TOT,INJ]

rb1 :: B * B1[TOT,INJ]

INTERFACE A(raa1,raa2,raa3,ra1a11,ra2a21,ra3a31) : I[A]
BOX [ raa1 : raa1
      BOX [ ra1a11 : ra1a11
          ]
    , raa2 : raa2
      BOX [ ra2a21 : ra2a21
          ]
    , raa3 : raa3
      BOX [ ra3a31 : ra3a31
          ]
    ]

INTERFACE UpdatesA(ra1a11): I[A1]
BOX [ ra1a11 : ra1a11
    ]

-- noUpdateA_1 has a target that is part of crud object A, but does not update A
noUpdateA_1 :: NoUpdate * A11[TOT,INJ]
INTERFACE DoesNotUpdateA_nr1(noUpdateA_1): I[NoUpdate]
BOX [ noUpdateA_1 : noUpdateA_1
    ]


-- TODO: add more sample interfaces to check crud matrix implementation (and underlying theory)

-- Possible bugs:

rc :: C * C1[TOT,INJ]
rcref :: C*C[TOT,INJ] -- TODO: this makes C a non-Crud object. Is that what we want?

--
notInInterface :: X1*X2
INTERFACE RelNotInInterface(notInInterface) : I[ONE]
BOX [ label : I ]
-- Gives rise to X as an R object in interface A, even though it does not appear in any interface expression
-- TODO: Can be fixed by static check on parameter usage, or by fixing implementation of relsUsedIn (uses expressionsIn, which returns parameters as expressions)

ENDCONTEXT
