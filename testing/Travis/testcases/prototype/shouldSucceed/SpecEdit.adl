CONTEXT SpecEdit IN ENGLISH
{- Ticket #:  ??
   Purpose: This script is in Shouldsucceed, because it should pass
   Result: PASS
   Reason: This script was devised to study the behaviour of specialization (CLASSIFY) in a live database.
-}

PURPOSE CONTEXT SpecEdit {+ Simple context for testing edit operations on narrowed relations -}
-- This script contains W-expressions, such as I[Orange];I[Lime];I[Citrus];I[Lemon]. These must be caught by the type checker,
-- because it is predictable that there can never be any population in a W-expression.
-- NOTE: these are currently not guaranteed to be empty, as mutual exclusion for CLASSIFY is not enforced (strangeLemon is an example)

CONCEPT Fruit "Most general concept"

CLASSIFY Nectarine ISA Fruit
CLASSIFY Citrus ISA Fruit
CLASSIFY Orange ISA Citrus
CLASSIFY Lime ISA Citrus
CLASSIFY Limorange IS Lime /\ Orange
CLASSIFY Lemon ISA Citrus


RELATION ownsNectarines[Person*Nectarine]
RELATION ownsOranges[Person*Orange]
RELATION ownsLimes[Person*Lime]
RELATION ownsCitrus[Person*Citrus]
RELATION citrusOwnedBy[Citrus*Person] -- for testing flip edit

RELATION ownsLimoranges[Person*Limorange]

RELATION limeProperties[Lime*LimeProperty] -- for testing editing in nested interface

INTERFACE Overview : I[ONE]
BOX [ "All people" : V[ONE*Person]
    , "All fruit" : V[ONE*Fruit]
    , "All citrus fruit" : V[ONE*Citrus]
    , "All oranges" : V[ONE*Orange]
    , "All limes" : V[ONE*Lime]
    , "All limoranges" : V[ONE*Limorange]
    , "All nectarines" : V[ONE*Nectarine]
    , "All lemons" : V[ONE*Lemon]
    ]

INTERFACE Person (ownsNectarines,ownsOranges,ownsLimes, ownsCitrus, citrusOwnedBy, ownsLimoranges) : I[Person]
BOX [ "Person atom" : I
    , "ownsNectarines"  : ownsNectarines
    , "ownsOranges"  : ownsOranges
    , "ownsLimes"  : ownsLimes
        INTERFACE Lime
    , "ownsLimoranges" : ownsLimoranges
    , "ownsCitrus" : ownsCitrus
    , "ownsCitrus;I[Lime]" : ownsCitrus;I[Lime]
    , "ownsCitrus;I[Orange]" : ownsCitrus;I[Orange]
    , "ownsCitrus;I[Orange];I[Lime]" : ownsCitrus;I[Orange];I[Lime]                     -- Person*Limorange
    , "ownsCitrus;I[Orange];I[Lime];I[Citrus]" : ownsCitrus;I[Orange];I[Lime];I[Citrus] -- Person*Limorange
    , "ownsCitrus;(I[Lime];I[Orange])~;I[Citrus]" : ownsCitrus;(I[Lime];I[Orange])~;I[Citrus] -- Person*Limorange (for testing flipEpsilons)
    , "ownsCitrus;I[Orange];I[Lime];I[Citrus];I[Lemon]" : ownsCitrus;I[Orange];I[Lime];I[Citrus];I[Lemon] -- not editable
    , "(I[Citrus];I[Orange];citrusOwnedBy)~" : (I[Citrus];I[Orange];citrusOwnedBy)~
    , "(I [Orange];citrusOwnedBy)~" : (I[Orange];citrusOwnedBy)~
    , "(citrusOwnedBy~);I[Orange]" : (citrusOwnedBy~);I[Orange]
    , "ownsLimes;I[Orange]" : ownsLimes;I[Orange]
    , "^ expression" : ownsLimes;I[Citrus];I[Lemon] -- Should fail
     -- It's more of a '^' than a 'W' (ownsLimes; Eps Lime [Lime*Citrus]; I[Citrus]; Eps Lemon [Citrus*Lemon]; I[Lemon]), but it will also always be empty.
     -- NOTE: like W expressions, these are currently not guaranteed to be empty, as mutual exclusion for CLASSIFY is not enforced (strangeLemon is an example)
    ]

INTERFACE Lime (limeProperties) : I[Lime]
BOX [ "Lime atom" : I
    , "limeProperties" : limeProperties
    ]

POPULATION ownsNectarines[Person*Nectarine] CONTAINS
  [ ("martijn", "nectarine1")
  ; ("martijn", "nectarine2")
  ; ("martijn", "nectarine3")
  ]

POPULATION ownsOranges[Person*Orange] CONTAINS
  [ ("martijn", "orange1")
  ; ("martijn", "orange2") 
  ; ("martijn", "limorange1") 
  ]

-- put strangeLemon in Lemon & Limorange (and superconcepts)  
dummyLemon :: Lemon * Lemon =
  [ ("strangeLemon", "strangeLemon")
  ]
dummyLimorange :: Limorange * Limorange =
  [ ("strangeLemon", "strangeLemon")
  ]

POPULATION ownsLimes[Person*Lime] CONTAINS
  [ ("martijn", "lime1")
  ; ("martijn", "limorange1") 
  ; ("martijn", "strangeLemon")     -- causes ^ expression to be non-empty
  ]
  
POPULATION ownsCitrus[Person*Citrus] CONTAINS
  [ ("martijn", "lime1")
  ; ("martijn", "orange1")
  ; ("martijn", "orange2")
  ; ("martijn", "limorange1") 
  ; ("martijn", "strangeLemon")    -- causes W expression to be non-empty
  ]

POPULATION ownsLimoranges[Person*Limorange] CONTAINS
  [ ("martijn", "limorange1") 
  ]


POPULATION limeProperties[Lime*LimeProperty] CONTAINS
  [ ("lime1", "large")
  ; ("lime1", "green")
  ]

{- 
-- Using a single identifier 'owns' for all fruits doesn't work: each owns[Person*X] seems to contain all fruits, not just X

RELATION owns[Person*Nectarine]
RELATION owns[Person*Orange]
RELATION owns[Person*Lime]

INTERFACE Overview : I[ONE]
BOX [ "All people" : V[ONE*Person]
    , "All fruit" : V[ONE*Fruit]
    , "All citrus fruit" : V[ONE*Citrus]
    , "All oranges" : V[ONE*Orange]
    , "All limes" : V[ONE*Lime]
    , "All limoranges" : V[ONE*Limorange]
    , "All nectarines" : V[ONE*Nectarine]
    ]

INTERFACE Person (owns[Person*Nectarine]) : I[Person]
BOX [ "Atom" : I
    , "Nectarines owned" : owns[Person*Nectarine]
    , "Oranges owned"    : owns[Person*Orange]
    , "Limes owned"      : owns[Person*Lime]
    ]

POPULATION owns[Person*Nectarine] CONTAINS
  [ ("martijn", "nectarine1")
  ; ("martijn", "nectarine2")
  ; ("martijn", "nectarine3")
  ]

POPULATION owns[Person*Orange] CONTAINS
  [ ("martijn", "orange1")
  ; ("martijn", "orange2") 
  ]

POPULATION owns[Person*Lime] CONTAINS
  [ ("martijn", "lime1")
  ]
-}

ENDCONTEXT
