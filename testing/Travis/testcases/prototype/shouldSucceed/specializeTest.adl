CONTEXT SpecializeTest IN ENGLISH

CLASSIFY A ISA G
CLASSIFY B ISA G

RELATION r[G*G]
RELATION s[A*B]
RELATION name[G*Text] [UNI]

RULE PeterRule : r;(I[G]/\name;'Peter';name~) |- s
VIOLATION ( TXT "{EX} InsPair;s;A;", SRC I[G], TXT ";B;", TGT I[G])
ROLE ExecEngine MAINTAINS PeterRule

RULE verify : s |- r;(I[G]/\name;'Peter';name~)

POPULATION name[G*Text] CONTAINS
  [ ("0", "Jack")
  ; ("1", "Peter")
  ]

POPULATION r[G*G] CONTAINS
  [ ("0", "0")
  ; ("1", "1")
  ]

PURPOSE CONTEXT SpecializeTest
{+The experiment is about dynamic specialization. Here is the case:
I want to introduce a new pair, which has signature [G*G] in the general case.
However, if the right atom's name is 'Peter', I want that atom to be of type B instead of G.
At the same time, the left atom must be specialized to A. I.e. I want the left atom to be of type A instead of G.
This demonstrates that the left atom can be specialized dynamically.
-}

PURPOSE INTERFACE Gs
{+Here is an experiment you can do.
1. Run this script and inspect the initial database through interface Gs. You will see two atoms, 0 and 1.
2. Notice that pair (1,1) is in relation s. This means that 1 has been specialized to A and B by the execengine.
3. Now insert pair (1,3) into relation r. Study the results and verify that atom 3 is not a B but a G.
4. Now insert pair (1,3) into relation s. Study the results and verify that atom 3 is both A and B .
-}
INTERFACE Gs : V[SESSION*G]
BOX [ name : name
    , r : r
    , s : s
    ]

ENDCONTEXT